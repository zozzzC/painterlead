// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  username String @unique
  password String 
  artistGeneralCommissions ArtistGeneralCommission[]
  artistImages ArtistImages[] 
  mainTag MainTag[]
}

enum Status { 
  OPEN
  WAITLIST
  CLOSED
}

model ArtistGeneralCommission { 
  id   Int @id @default(autoincrement())
  User   User @relation(fields: [artistId], references: [id])
  status Status 
  artistId Int
  name String
  blurb String?
  description String? 
  artistImages ArtistImages[]
  MainTag MainTag @relation(fields: [mainTagId], references:[id])
  OptionalTag OptionalTag? @relation(fields: [optionalTagId], references: [id])
  mainTagId Int
  optionalTagId Int?
}

model MainTag { 
  id Int @id @default(autoincrement())
  name String
  User  User @relation(fields: [artistId], references: [id])
  artistId Int
  ArtistGeneralCommission ArtistGeneralCommission[]
}

model ArtistImages { 
  id Int @id @default(autoincrement())
  User   User @relation(fields: [artistId], references: [id])
  artistId Int
  ArtistGeneralCommission ArtistGeneralCommission @relation(fields: [artistGeneralCommissionsId], references: [id])
  artistGeneralCommissionsId Int
}

model OptionalTag { 
  id Int @id @default(autoincrement())
  name String
  ArtistGeneralCommission ArtistGeneralCommission[]
} 